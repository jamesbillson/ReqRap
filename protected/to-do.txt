PRE DEMO Changes
----------------------------------------

Index page is messed up 
   - remove Reqer from title.
   - change Requirements to Applications


----------------------------------------

Clean up all interfaces for each object

1=>'rule',          Renumber Create   Update   History  Rollback
2=>'form',          Renumber Create   Update   History  Rollback
3=>'formproperty',  #R#  #C#   #U#   History  Rollback
4=>'actor',         Create   Update   History  Rollback
5=>'package',       Renumber Create   Update   History  Rollback
6=>'object',        #R  History  Rollback #LoadVersion
7=>'objectproperty' Renumber Create   Update   History  Rollback
8=>'flow',          Create   Update   History  Rollback
9=>'step',          Renumber Create   Update   History  Rollback
10=>'usecase',      Renumber Create   Update   History  Rollback
11=>'photo',        Renumber Create   Update   History  Rollback
12=>'iface',        Renumber Create   Update   History  Rollback #LoadVersion
13=>'interfacetype',Renumber Create   Update   History  Rollback
17=>'category',     Renumber Create   Update   History  #RB
18=>'simple',       #R Create   Update   History  #RB 


Rich text entry into all description fields

Order/re-order of:
     Simple Requirements within Category
     Objects
     Object properties
     Forms
     Form properties
?? other?

When deleting a release, there must be a draft release left at the end of the process - 
make it so we can't delete the draft, you would have to finalise it first.

Photo import - not currently handled.  Needs to make a copy of the image files.

Number displayed at the top of the add simple screen is incorrect, and probably un-necessary.

Package name on use case view is wrong version ?? Not sure if still an issue




FEATURES

### PROJECT
Need a flag for auto-re-numbering.  If the project has been released, then the numbering should stop re-numbering.
But add an explicit setting.

### ACTOR
Delete an actor either from a use case, or from a project requires you to move their steps to another actor.
Need to create the form to re-assign them.

### USECASE
Put 'This use case describes the process of:' in the system, 
then we can take the same thing and say 'this test case verifies the process of:'
Make this configurable for the project, e.g. have a 'use case description template', 
and a 'test case description template' - use a meta table.
Option to copy a use case to the same, or other package.  E.g. a 'Create/Edit' stub could be replicated for different objects. 


Notes field, 
To do which causes a flag.
Maturity field, or this could be stored in the version? there is a status field there.
Create is immediately 'initial', then a little button in the header to make
 each UC move forward or backward

### LIBRARY ITEMS.
Tags on library items
Search
Classifications

### OBJECT
Potentially objects could be selected to create Create, Edit and Delete usecases from templates?

### TRACEABILITY

Add some form of free form requirement - maybe with an excel upload.
Have to think about the ease of adding connection between any change and a requirement.

### PRINTING
Set up a configurable cover page.
Company logo


### Collaborators
have an approver switch and a circulation switch so they print out in a table on the document.
also an edit switch, we already have upload.

### TEST RUNS
create the first test run when the project gets switched to testing.

### NON FUNCTIONAL REQ's.

Rules - Text needs to accept some formatting - bullets, line breaks.
Rules - health check
    - number of rules not used.
Rules - show deleted rules ?







## VERSION CONTROL ###

Roll Back for all objects individually - but some confusion on steps.

If I have step-flow and flow is versioned, it doesn't really mean much as its only a container.


Project Roll Back - at the moment use releases instead.
Objects created after the roll back point (RBP) to be deleted.
Objects active version to be the version prior to the RBP.

Go through each object type by number.
Go through each Object.Number by version, DESC.
Prior to RBP delete any objects that are created.
From the RBP back, set the active version to the first version encountered.


