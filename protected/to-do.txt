### ACTOR
Actor should have a 'Test Case' pre-conditions (e.g. log in as user)

### USECASE
Put 'This use case describes the process of:' in the system, 
then we can take the same thing and say 'this test case verifies the process of:'

## Status
## COMMENTS / TO DO's.

### Copy: 
UC's
Objects
Forms

from one job to the next.

### Library items.


### Versions

relationships are tricky.
either log, or make multiple copies.



### TEST RUNS
create the first test run when the project gets switched to testing.

### NON FUNCTIONAL REQ's.

free form.

Rules - Text needs to accept some formatting - bullets, line breaks.
Rules - health check
    - number of rules not used.
Rules - show deleted rules ?

# Release

Create a new release.
Snapshot

# Object
version control
Create Form from Object.

#USE CASE
view - make the UC details Editable (Description and Preconditions)

Create - add an actor. Select or add.



#FLOW / ACTOR
Make the various actors associated with each step.  
If one actor then by default they are associated with each step.
If no actor - cannot create step.
If more than one actor - choose actor per step.
If remove actor - Cannot have no actor, so if you remove, you must add a new one.
then when you remove one, it removes them from the steps, and adds asks who you want instead.
Maybe like rules you actually add them via steps, 
so that rather than add them first, 
you add as you go, 
then you can rationalise later.